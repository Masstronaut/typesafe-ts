/** @type {Partial<import("typedoc").TypeDocOptions>} */
const config = {
    // Paths relative to the config file location
    entryPoints: ["../src/index.ts"],
    out: "../docs",
    readme: "../readme.md",
    tsconfig: "../tsconfig.json",
    name: "typesafe-ts API Documentation",
    theme: "default",
    includeVersion: true,
    excludePrivate: true,
    excludeProtected: true,
    excludeInternal: true,
    gitRevision: "main",
    gitRemote: "origin",
    hideGenerator: false,
    sort: ["source-order"],
    kindSortOrder: [
        "Document",
        "Project",
        "Module",
        "Namespace",
        "Enum",
        "EnumMember",
        "Class",
        "Interface",
        "TypeAlias",
        "Constructor",
        "Property",
        "Variable",
        "Function",
        "Method",
        "Accessor",
        "Parameter",
        "TypeParameter",
        "Reference",
    ],
    categorizeByGroup: false,
    searchInComments: true,
    cleanOutputDir: true,
    treatWarningsAsErrors: false,
    inlineTags: ["@inlineType", "@inheritDoc", "@useDeclaredType"],
    validation: {
        notExported: false,
        invalidLink: true,
        notDocumented: false,
    },
    highlightLanguages: [
        "bash",
        "console",
        "css",
        "html",
        "javascript",
        "json",
        "jsonc",
        "json5",
        "tsx",
        "typescript",
    ],
};

export default config;
